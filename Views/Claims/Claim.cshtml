@{
    ViewData["Title"] = "Submit Claim";
}
@model ContractMonthlyClaimSystem.Models.Claims
<!--submit a claim
   -- assumption is the ICs are already on database
   --only information concerning this specific IC will be accessable
   --IC will choose from drop down lists and select relvent information
   REMOVE SAMPLE DATA IN PART 2
    -->
<div class="form-container">
    <h3>Submit Claims</h3>
    <h2>Enter claim details and submit claim for process</H2>
    <h3>NB!:All claims will be processed within 7 woring days from the date of submission</h3>
    <script src="C:\Users\RC_Student_lab\source\repos\ContractMonthlyClaimSystem\wwwroot\js\site.js"></script>

    <form id="ClaimsForm" asp-action="ClaimsForm" asp-controller="Claims" enctype="multipart/form-data" method="post">
        <div class="field">
        <h3>Claim ID</h3>
        <!--CLAIM ID add casting,e.g CL001-->
        <div class="input-field">
           @*<label>Claim ID</label*@
            <input  class="form-control" type="number" placeholder="CL001" name="CLID" asp-for="ClaimId" asp-for="ClaimId" disabled  />
        </div>
        <!--IC ID add casting, e,g IC101298-->
        <div class="input-field">
            <label>IC ID</label>
            <input class="form-control" type="number" placeholder="IC101298" name="ICID" asp-for="ICID" disabled />
        </div>
        <!--Qualification ID and name, options will depeend on assigned qualification -->
        <div class="input-field">
            <label>Qualification</label>
             @Html.DropDownListFor(model => model.QualificationName, new List<SelectListItem>
        {
            new SelectListItem { Value = "DISD", Text = "Diploma in Software Development" },
            new SelectListItem { Value = "BIT", Text = "Bachelor of Information in Business Information" }
        }, new { @class = "form-control", required = "required" })
        </div>
        <!--Module ID and name, option values will depend on assigned modules-->
        <div class="input-field">
            <label>Module</label>
            @Html.DropDownListFor(model => model.ModuleCode, new List<SelectListItem>
        {
            new SelectListItem { Value = "PROG6221", Text = "Programming 2B" },
            new SelectListItem { Value = "DATA6222", Text = "Database 2B" },
             new SelectListItem { Value = "WEDE6020", Text = "Web Development (Intermediate)" },
        }, new { @class = "form-control", required = "required" })
        </div>
        <!--Semester ID and name, option values will depend on time of the year-->
        <div class="input-field">
            <label>Semester</label>
              @Html.DropDownListFor(model => model.Semester, 
            new List<SelectListItem>
            {
                new SelectListItem { Value = "1", Text = "1" },
                new SelectListItem { Value = "2", Text = "2" }
            }, 
            new { @class = "form-control", @disabled = "disabled" })
        </div>
        <!--Group ID and name, option values will depend on assigned group-->
        <div class="input-field">
            <label>Group</label>
            @Html.DropDownListFor(model => model.Group, new List<SelectListItem>
            {
                new SelectListItem { Value = "Group1", Text = "Group1" },
                new SelectListItem { Value = "Group2", Text = "Group2" },
                new SelectListItem { Value = "Group3", Text = "Group3" }
            }, 
            new { @class = "form-control", required = "required" })

        </div>
        <!--Lesson date-->
        <div class="input-field">
            <label>Lesson Date</label>
            <input class="form-control" type="date" name="LessonDate" asp-for="LessonDate" required />
        </div>
       <!--Hours Worked-->
        <div class="input-field">
    <label>Hour Worked</label>
    @Html.DropDownListFor(model => model.HoursWorked, 
            new List<SelectListItem>
            {
                new SelectListItem { Value = "1", Text = "1" },
                new SelectListItem { Value = "2", Text = "2" },
                new SelectListItem { Value = "3", Text = "3" },
            }, 
            new { @class = "form-control", required = "required" })
</div>
        <!--Rate per Hour-->
        <div class="input-field">
            <label>Rate</label>
            <input class="form-control" type="number" placeholder="Enter your hourly rate" asp-for="Rate" required />
        </div>
        <!--Link to register-->
         <!--Link to corresponding claim-->
          <!--add upload button and the file name should be displayed,
          limit file size(no more than 5mb), add image extenstions,
          track status after submission, view claim and document, it will update as it progress, add progress bar,
          unit test the functions- iAction Results,try and catch for error handling-exception handling, save uploads to a file
          use in memory database, login funtionality is for part3,create reports for part 3-->
        <div class="input-field">
            <label>Register URL</label>
            <input class="form-control" type="file" id="fileUpload" name="FileUpload" required/> 
      </div>
    </div>
               <button class="btn btn-primary" type="submit" id="submitButton" onclick="submitFormWithConfirmation()">Submit</button>
               <button class="btn btn-primary" type="button" onclick="confirmClearForm()">Clear Form</button>

   
     </form>
     
</div>